module com.reprezen.rapidml.GenerateRapidML

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

//	bean = StandaloneSetup {
//		scanClassPath  = true
//		platformUri = "${rootPath}"
////		registerGeneratedEPackage = "org.eclipse.xsd.XSDPackage"
//		registerGeneratedEPackage = "com.modelsolv.reprezen.restapi.datatypes.DatatypesPackage"
//		registerGeneratedEPackage = "com.modelsolv.reprezen.restapi.libraries.LibrariesPackage"
//		registerGeneratedEPackage = "com.modelsolv.reprezen.restapi.RestapiPackage"
//	}
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.reprezen.rapidml"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				genericIde = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
					src = "com.reprezen.rapidml.ui/xtext-gen"
					srcGen = "com.reprezen.rapidml.ui/xtend-gen"
				}
				mavenLayout = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "com.modelsolv.reprezen.restapi.xtext.RapidML"
			fileExtensions = "rapid"			
			referencedResource = "platform:/resource/com.reprezen.rapidml.model/model/RestAPI.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
//				generateDeprecationValidation = true
			}
		}
	}
}