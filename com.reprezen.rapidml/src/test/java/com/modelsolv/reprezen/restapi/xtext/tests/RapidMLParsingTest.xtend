/*
 * generated by Xtext 2.15.0
 */
package com.modelsolv.reprezen.restapi.xtext.tests

import com.google.common.io.Resources
import com.google.inject.Inject
import com.modelsolv.reprezen.restapi.ZenModel
import java.nio.charset.Charset
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith

import static org.junit.Assert.*
import org.junit.Before

@RunWith(XtextRunner)
@InjectWith(RapidMLInjectorProvider)
class RapidMLParsingTest {

	@Inject
	ParseHelper<ZenModel> parseHelper


	@Test
	def void testStructure() {
		val result = parseHelper.parse('''
			rapidModel FooModel
				dataModel FooDataModel
					structure Foo
						single: string
						many: string*
						singleRef: Foo
						manyRef: Foo*
		''')

		assertNotNull(result)
		val errors = result.eResource.errors
		assertTrue(errors.isEmpty)
	}

	@Test
	def void loadModel() {
		val model = Resources.toString(
			Resources.getResource("TaxBlaster.rapid"),
			Charset.forName("UTF-8")
		)
		println(model)
		val result = parseHelper.parse(model)
		assertNotNull(result)
		val errors = result.eResource.errors
		assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}
